# dns,域名解析
resolver    10.96.0.10 valid=60s;
# 日志记录模块
#set $lua_syslog_host     "127.0.0.1";
body_filter_by_lua_file  proxy_by_body.lua; # /etc/nginx/rx/proxy_by_body.lua
log_by_lua_file          proxy_by_log.lua;  # /etc/nginx/rx/proxy_by_log.lua
# 通用监控检查接口
server {
  listen          80;
  server_name     _;
  location = /healthz {
      return 200   '{"success":true,"data":$msec}';
  }
}
# 服务内部接口
server {
  listen            80;
  access_log        off;
  server_name       ~^(?<proxy_host>.+)-internal\.logs-spy;
  server_name       ~^(?<proxy_host>.+)-internal\.logs-spy\.default\.svc;
  server_name       ~^(?<proxy_host>.+)-internal\.logs-spy\.default\.svc\.cluster\.local;
  proxy_set_header  X-Forwarded-Host  $proxy_host;
  location / {
    proxy_pass      http://$proxy_host.cluster.local;
  }
}
# 服务外部接口
server {
  listen            80;
  access_log        off;
  server_name       ~^(?<proxy_host>.+)-http\.logs-spy;
  server_name       ~^(?<proxy_host>.+)-http\.logs-spy\.default\.svc;
  server_name       ~^(?<proxy_host>.+)-http\.logs-spy\.default\.svc\.cluster\.local;
  proxy_set_header  X-Forwarded-Host  $proxy_host;
  location / {
    proxy_pass      http://$proxy_host;
  }
}
# 服务外部接口，https
server {
  listen            80;
  access_log        off;
  server_name       ~^(?<proxy_host>.+)-https\.logs-spy;
  server_name       ~^(?<proxy_host>.+)-https\.logs-spy\.default\.svc;
  server_name       ~^(?<proxy_host>.+)-https\.logs-spy\.default\.svc\.cluster\.local;
  proxy_set_header  X-Forwarded-Host  $proxy_host;
  location / {
    proxy_pass      https://$proxy_host;
  }
}
# 服务内部即可，指定端口
server {
  listen            80;
  server_name       ~^(?<proxy_host>.+)-internal-p(?<port>\d+)\.logs-spy;
  server_name       ~^(?<proxy_host>.+)-internal-p(?<port>\d+)\.logs-spy\.default\.svc;
  server_name       ~^(?<proxy_host>.+)-internal-p(?<port>\d+)\.logs-spy\.default\.svc\.cluster\.local;
  access_log        off;
  proxy_set_header  X-Forwarded-Host  $proxy_host;
  location / {
      proxy_pass    http://$proxy_host.cluster.local:$port;
  }
}
# 服务外部接口，指定端口
server {
  listen            80;
  access_log        off;
  server_name       ~^(?<proxy_host>.+)-http-p(?<port>\d+)\.logs-spy;
  server_name       ~^(?<proxy_host>.+)-http-p(?<port>\d+)\.logs-spy\.default\.svc;
  server_name       ~^(?<proxy_host>.+)-http-p(?<port>\d+)\.logs-spy\.default\.svc\.cluster\.local;
  proxy_set_header  X-Forwarded-Host  $proxy_host;
  location / {
    proxy_pass      http://$proxy_host:$port;
  }
}
# 服务外部接口，https，指定端口
server {
  listen            80;
  access_log        off;
  server_name       ~^(?<proxy_host>.+)-https-p(?<port>\d+)\.logs-spy;
  server_name       ~^(?<proxy_host>.+)-https-p(?<port>\d+)\.logs-spy\.default\.svc;
  server_name       ~^(?<proxy_host>.+)-https-p(?<port>\d+)\.logs-spy\.default\.svc\.cluster\.local;
  proxy_set_header  X-Forwarded-Host  $proxy_host;
  location / {
    proxy_pass      https://$proxy_host:$port;
  }
}
# 服务不存在接口
server {
  listen          80;
  server_name     _;
  location = / {
      return    404 'host=[$host] path=[$request_uri] status=404';
  }
}