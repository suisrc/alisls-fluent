# 看门狗流量监控
# ###############################################################################
# 记录入口，并鉴权
server {
  listen        ${NGX_AUTHZ_PORT};
  resolver      ${NGX_RESOLVRE} valid=120s;
  access_log    off;
  server_name   _;
  location = /healthz {
      return 200   '{"success":true,"data":$msec}';
  }
  location = /api/iam/v1/a/odic/authc {
    proxy_pass  ${NGX_KIN_HTTP}://${NGX_CAS_HOST}/authc?$args;
  }
  location = /api/iam/v1/a/odic/authx {
    proxy_pass  ${NGX_KIN_HTTP}://${NGX_CAS_HOST}/authx?$args;
  }
  location = /api/iam/v1/a/odic/authz {
    proxy_pass  ${NGX_KIN_HTTP}://${NGX_CAS_HOST}/authz?$args;
  }
  location ^~ /api/iam/v1/a/ {
    proxy_pass  ${NGX_KIN_HTTP}://${NGX_KIN_HOST};
  }
  location /authz {
    internal;
    proxy_set_header  Host  $host;
    proxy_set_header  X-Forwarded-For         $proxy_add_x_forwarded_for;
    proxy_set_header  X-Request-Origin-Host   $http_host;
    proxy_set_header  X-Request-Origin-Path   $request_uri;
    proxy_set_header  X-Request-Origin-Method $request_method;
    proxy_method      GET;
    # 特殊情况下，强制返回用户信息，便于调试/日志记录
    proxy_set_header  X-Debug-Force-User    "961212";
    proxy_pass        ${NGX_KIN_HTTP}://${NGX_CAS_PATH};
  }
  #set $cas_svc_host       "end-iam-cas-svc";
  #set $kin_svc_host       "end-iam-kin-svc";
  #set $cas_svc_path       "end-iam-kin-svc/authx";
  #include                 /etc/nginx/az/authz_by_svc.conf;
  access_by_lua_file       /etc/nginx/az/authz_by_access.lua;
  body_filter_by_lua_file  /etc/nginx/az/log_by_body.lua;
  log_by_lua_file          ${LOG_AUTHZ_HANDLER};
  # 边车服务使用， 只绑定一个服务
  location / {
    set $proxy_tags   "in,traffic,authz"; # inbound traffic, authz
    proxy_pass        http://${NGX_SVC_ADDR};
  }
}
